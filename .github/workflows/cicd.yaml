name: CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  GO_VERSION: 1.18.x

jobs:
  # TODO: the generator creates code that doesn't pass the linter
#  lint:
#    runs-on: [ feature/generic, size/sm, env/infra-mgmt, group/default ]
#    steps:
#      - name: Install Go
#        uses: actions/setup-go@v2
#        with:
#          go-version: ${{ env.GO_VERSION }}
#      - name: Install Java for skillz-openapi-generator
#        uses: actions/setup-java@v2
#        with:
#          distribution: 'adopt'
#          java-version: '11'
#      - name: Install Maven for skillz-openapi-generator
#        uses: stCarolas/setup-maven@v4.1
#      - name: Checkout code
#        uses: actions/checkout@v2
#      - name: Get Github Token
#        id: github-token
#        uses: getsentry/action-github-app-token@v1
#        with:
#          app_id: ${{ secrets.INFRA_BOT_GITHUB_APP_ID }}
#          private_key: ${{ secrets.INFRA_BOT_GITHUB_APP_KEY }}
#      - name: Git Config
#        run: git config --global url."https://x-access-token:${{ steps.github-token.outputs.token }}@github.com/skillz".insteadOf "https://github.com/skillz"
#      - name: Generate mocks
#        run: make mocks
#        env:
#          GITHUB_TOKEN: ${{ steps.github-token.outputs.token }}
#          ARTIFACTORY_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
#          ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
#      - name: Workaround golangci-lint-action issue. See PS-40889.
#        run: go clean -modcache
#      - name: Run linters
#        uses: golangci/golangci-lint-action@v2
#        with:
#          version: v1.39
#          only-new-issues: true

  test:
    runs-on: [ feature/generic, size/md, env/infra-mgmt, group/default ]
    steps:
      - name: Install Go
        if: success()
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Install Java for skillz-openapi-generator
        id: setup-java-11
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'
      - name: Install Maven for skillz-openapi-generator
        uses: stCarolas/setup-maven@v4.1
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
      - name: Get Github Token
        id: github-token
        uses: getsentry/action-github-app-token@v1
        with:
          app_id: ${{ secrets.INFRA_BOT_GITHUB_APP_ID }}
          private_key: ${{ secrets.INFRA_BOT_GITHUB_APP_KEY }}
      - name: Git Config
        run: git config --global url."https://x-access-token:${{ steps.github-token.outputs.token }}@github.com/skillz".insteadOf "https://github.com/skillz"
      - name: Run unit tests
        run: make unit_test
        env:
          GITHUB_TOKEN: ${{ steps.github-token.outputs.token }}
          ARTIFACTORY_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
          ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
      - name: Run integration tests
        run: make integration_tests
        env:
          GITHUB_TOKEN: ${{ steps.github-token.outputs.token }}
          ARTIFACTORY_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
          ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
      - name: SonarQube Scan
        uses: philips-software/sonar-scanner-action@v1.2.0
        env:
          JAVA_HOME: ${{ steps.setup-java-11.outputs.jdk-path }}
        with:
          projectName: idempotency-examples
          projectKey: idempotency-examples
          url: ${{ secrets.SONARQUBE_HOST }}
          token: ${{ secrets.SONARQUBE_TOKEN }}
          enablePullRequestDecoration: true
          runQualityGate: true

  build_docker_image:
    needs: [test]
    uses: skillz/infra-reusable-workflows/.github/workflows/reusable-build-docker-image.yaml@build-docker-image-v0.1
    with:
      pass_github_token: true
      pass_artifactory_creds: true
    secrets:
      INFRA_BOT_GITHUB_APP_ID: ${{ secrets.INFRA_BOT_GITHUB_APP_ID }}
      INFRA_BOT_GITHUB_APP_KEY: ${{ secrets.INFRA_BOT_GITHUB_APP_KEY }}
      ARTIFACTORY_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
      ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}

  deploy_dev:
    needs: [build_docker_image]
    if: ${{ github.event_name != 'pull_request' }}
    uses: skillz/infra-reusable-workflows/.github/workflows/reusable-deploy.yaml@deploy-v0.1
    with:
      env: dev
      deploy_sandbox: false
    secrets:
      INFRA_BOT_GITHUB_APP_ID: ${{ secrets.INFRA_BOT_GITHUB_APP_ID }}
      INFRA_BOT_GITHUB_APP_KEY: ${{ secrets.INFRA_BOT_GITHUB_APP_KEY }}
      ARGOCD_WATCHER_USERNAME: ${{ secrets.ARGOCD_WATCHER_USERNAME }}
      ARGOCD_WATCHER_PASSWORD: ${{ secrets.ARGOCD_WATCHER_PASSWORD }}
